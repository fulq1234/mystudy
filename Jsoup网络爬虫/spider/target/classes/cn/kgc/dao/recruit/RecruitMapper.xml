<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kgc.dao.recruit.RecruitMapper">

    <select id="getRecruitById" resultType="cn.kgc.beans.Recruit" >
        select
            id as id,
            title as title,
            city as city,
            companyName as companyName,
            companyType as companyType,
            companyUrl as companyUrl,
            welfare as welfare,
            companyAddress as companyAddress,
            monthlySalary as monthlySalary,
            minSalary as minSalary,
            maxSalary as maxSalary,
            releaseDate as releaseDate,
            workNature as workNature,
            experience as experience,
            eucation as eucation,
            rNum as rNum,
            positionCategory as positionCategory,
            jobDescription as jobDescription,
            listUrl as listUrl,
            detailUrl as detailUrl,
            uuid as uuid,
            dataType as dataType,
            website as website,
            status as status,
            companySize as companySize,
            createdTime as createdTime,
            updatedTime as updatedTime,
            taskId as taskId
        from recruit
        <trim prefix="where" prefixOverrides="and | or">
            <if test="id != null">
                and id=#{id}
            </if>
        </trim>
    </select>

    <select id="getRecruitListByMap" resultType="cn.kgc.vo.RecruitVo" parameterType="java.util.Map">
        select
            r.id as id,
            r.title as title,
            r.city as city,
            r.companyName as companyName,
            r.companySize as companySize,
            r.companyType as companyType,
            r.companyUrl as companyUrl,
            r.welfare as welfare,
            r.companyAddress as companyAddress,
            r.monthlySalary as monthlySalary,
            r.minSalary as minSalary,
            r.maxSalary as maxSalary,
            r.releaseDate as releaseDate,
            r.workNature as workNature,
            r.experience as experience,
            r.eucation as eucation,
            r.rNum as rNum,
            r.positionCategory as positionCategory,
            r.jobDescription as jobDescription,
            r.listUrl as listUrl,
            r.detailUrl as detailUrl,
            r.uuid as uuid,
            r.dataType as dataType,
            cdt.typeName as typeName,
            r.website as website,
            r.status as status,
            ct.taskName as taskName,
            ct.id as taskId,
            r.createdTime as createdTime,
            r.updatedTime as updatedTime
        from recruit r
          left JOIN  crawler_task ct on r.taskId=ct.id
          left join  crawler_data_type cdt on r.dataType=cdt.id
        <trim prefix="where" prefixOverrides="and | or">
                <if test="id != null and id!=-1">
                    and r.id=#{id}
                </if>
                <if test="title != null and title!=-1">
                    and r.title=#{title}
                </if>
                <if test="city != null and city!=-1">
                    and r.city=#{city}
                </if>
                <if test="companyName != null and companyName!='-1'">
                    and r.companyName=#{companyName}
                </if>
                <if test="companyType != null and companyType!=-1">
                    and r.companyType=#{companyType}
                </if>
                <if test="companyUrl != null and companyUrl!='-1'">
                    and r.companyUrl=#{companyUrl}
                </if>
                <if test="welfare != null and welfare!='-1'">
                    and r.welfare=#{welfare}
                </if>
                <if test="companyAddress != null and companyAddress!='-1'">
                    and r.companyAddress=#{companyAddress}
                </if>
                <if test="monthlySalary != null and monthlySalary!=-1">
                    and r.monthlySalary=#{monthlySalary}
                </if>
                <if test="minSalary != null and minSalary!=-1">
                    and r.minSalary=#{minSalary}
                </if>
                <if test="maxSalary != null and maxSalary!=-1">
                    and r.maxSalary=#{maxSalary}
                </if>
                <if test="releaseDate != null and releaseDate!='-1'">
                    and r.releaseDate=#{releaseDate}
                </if>
                <if test="workNature != null and workNature!='-1'">
                    and r.workNature=#{workNature}
                </if>
                <if test="experience != null and experience!='-1'">
                    and r.experience=#{experience}
                </if>
                <if test="eucation != null and eucation!='-1'">
                    and r.eucation=#{eucation}
                </if>
                <if test="rNum != null and rNum!=-1">
                    and r.rNum=#{rNum}
                </if>
                <if test="positionCategory != null and positionCategory!='-1'">
                    and r.positionCategory=#{positionCategory}
                </if>
                <if test="jobDescription != null and jobDescription!='-1'">
                    and r.jobDescription=#{jobDescription}
                </if>
                <if test="listUrl != null and listUrl!='-1'">
                    and r.listUrl=#{listUrl}
                </if>
                <if test="detailUrl != null and detailUrl!='-1'">
                    and r.detailUrl=#{detailUrl}
                </if>
                <if test="uuid != null and uuid!='-1'">
                    and r.uuid=#{uuid}
                </if>
                <if test="dataType != null and dataType!=-1">
                    and r.dataType=#{dataType}
                </if>
                <if test="website != null and website!='-1'">
                    and r.website=#{website}
                </if>
                <if test="status != null and status!=-1">
                    and r.status=#{status}
                </if>
                <if test="createdTime != null and createdTime!='-1'">
                    and r.createdTime=#{createdTime}
                </if>
                <if test="updatedTime != null and updatedTime!='-1'">
                    and r.updatedTime=#{updatedTime}
                </if>
                <if test="taskId != null and taskId!=-1">
                    and r.taskId=#{taskId}
                </if>
        </trim>
            order by r.createdTime desc
        <if test="beginPos != null and pageSize != null ">
            limit #{beginPos},#{pageSize}
        </if>
    </select>

    <select id="getRecruitCountByMap" resultType="Integer"  parameterType="java.util.Map">
        select count(*) from recruit
        <trim prefix="where" prefixOverrides="and | or">
            <if test="id != null and id!=-1">
                and id=#{id}
            </if>
            <if test="title != null and title!=-1">
                and title=#{title}
            </if>
            <if test="city != null and city!=-1">
                and city=#{city}
            </if>
            <if test="companyName != null and companyName!='-1'">
                and companyName=#{companyName}
            </if>
            <if test="companyType != null and companyType!=-1">
                and companyType=#{companyType}
            </if>
            <if test="monthlySalary != null and monthlySalary!=-1">
                and monthlySalary=#{monthlySalary}
            </if>
            <if test="minSalary != null and minSalary!=-1">
                and minSalary=#{minSalary}
            </if>
            <if test="maxSalary != null and maxSalary!=-1">
                and maxSalary=#{maxSalary}
            </if>
            <if test="releaseDate != null and releaseDate!='-1'">
                and releaseDate=#{releaseDate}
            </if>
            <if test="eucation != null and eucation!='-1'">
                and eucation=#{eucation}
            </if>
            <if test="positionCategory != null and positionCategory!='-1'">
                and positionCategory=#{positionCategory}
            </if>
            <if test="uuid != null and uuid!='-1'">
                and uuid=#{uuid}
            </if>
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="website != null and website!='-1'">
                and website=#{website}
            </if>
            <if test="status != null and status!=-1">
                and status=#{status}
            </if>
            <if test="createdTime != null and createdTime!='-1'">
                and createdTime=#{createdTime}
            </if>
            <if test="updatedTime != null and updatedTime!='-1'">
                and updatedTime=#{updatedTime}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
        </trim>
    </select>

    <insert id="insertRecruit" parameterType="cn.kgc.beans.Recruit">
        insert into recruit(
                title,
                city,
                companyName,
                companyType,
                companyUrl,
                welfare,
                companyAddress,
                monthlySalary,
                minSalary,
                maxSalary,
                releaseDate,
                workNature,
                experience,
                eucation,
                rNum,
                positionCategory,
                jobDescription,
                listUrl,
                detailUrl,
                uuid,
                dataType,
                website,
                status,
                companySize,
                taskId,
                createdTime,
                updatedTime)
        values(
                 #{title},
                 #{city},
                 #{companyName},
                 #{companyType},
                 #{companyUrl},
                 #{welfare},
                 #{companyAddress},
                 #{monthlySalary},
                 #{minSalary},
                 #{maxSalary},
                 #{releaseDate},
                 #{workNature},
                 #{experience},
                 #{eucation},
                 #{rNum},
                 #{positionCategory},
                 #{jobDescription},
                 #{listUrl},
                 #{detailUrl},
                 #{uuid},
                 #{dataType},
                 #{website},
                 #{status},
                 #{companySize},
                 #{taskId},
                 #{createdTime},
                 #{updatedTime}
                )
    </insert>

    <update id="updateRecruit" parameterType="cn.kgc.beans.Recruit">
        update recruit
        <trim prefix="set" suffixOverrides="," suffix="where id=#{id}">
                <if test="title != null and title!='-1'">
                    title=#{title},
                </if>
                <if test="city != null and city!='-1'">
                    city=#{city},
                </if>
                <if test="companyName != null and companyName!='-1'">
                    companyName=#{companyName},
                </if>
                <if test="companyType != null and companyType!='-1'">
                    companyType=#{companyType},
                </if>
                <if test="companyUrl != null and companyUrl!='-1'">
                    companyUrl=#{companyUrl},
                </if>
                <if test="welfare != null and welfare!='-1'">
                    welfare=#{welfare},
                </if>
                <if test="companyAddress != null and companyAddress!='-1'">
                    companyAddress=#{companyAddress},
                </if>
                <if test="monthlySalary != null and monthlySalary!='-1'">
                    monthlySalary=#{monthlySalary},
                </if>
                <if test="minSalary != null and minSalary!='-1'">
                    minSalary=#{minSalary},
                </if>
                <if test="maxSalary != null and maxSalary!='-1'">
                    maxSalary=#{maxSalary},
                </if>
                <if test="releaseDate != null and releaseDate!='-1'">
                    releaseDate=#{releaseDate},
                </if>
                <if test="workNature != null and workNature!='-1'">
                    workNature=#{workNature},
                </if>
                <if test="experience != null and experience!='-1'">
                    experience=#{experience},
                </if>
                <if test="eucation != null and eucation!='-1'">
                    eucation=#{eucation},
                </if>
                <if test="rNum != null and rNum!='-1'">
                    rNum=#{rNum},
                </if>
                <if test="positionCategory != null and positionCategory!='-1'">
                    positionCategory=#{positionCategory},
                </if>
                <if test="jobDescription != null and jobDescription!='-1'">
                    jobDescription=#{jobDescription},
                </if>
                <if test="listUrl != null and listUrl!='-1'">
                    listUrl=#{listUrl},
                </if>
                <if test="detailUrl != null and detailUrl!='-1'">
                    detailUrl=#{detailUrl},
                </if>
                <if test="uuid != null and uuid!='-1'">
                    uuid=#{uuid},
                </if>
                <if test="dataType != null and dataType!=-1">
                    dataType=#{dataType},
                </if>
                <if test="website != null and website!='-1'">
                    website=#{website},
                </if>
                <if test="status != null and status!='-1'">
                    status=#{status},
                </if>
                <if test="createdTime != null and createdTime!='-1'">
                    createdTime=#{createdTime},
                </if>
                <if test="updatedTime != null and updatedTime!='-1'">
                    updatedTime=#{updatedTime}
                </if>
                <if test="taskId != null and taskId!=-1">
                    and taskId=#{taskId}
                </if>
        </trim>
    </update>

    <delete id="deleteRecruitById" parameterType="Long">
        delete from recruit where id = #{id}
    </delete>

    <delete id="batchDeleteRecruit" parameterType="java.util.Map">
        delete from recruit where id in (
            <foreach collection="ids" item="id" separator=",">
                    #{id}
            </foreach>
        )
    </delete>

    <update id="deleteInvalidData" parameterType="java.util.Map">
        update recruit set status=1 where
        <foreach collection="words" item="word" separator="or">
            title like  CONCAT('%',#{word},'%') OR jobDescription like  CONCAT('%',#{word},'%')
        </foreach>
    </update>

    <delete id="deleteByCondition" parameterType="java.util.Map">
        delete from recruit
        <trim prefix="where" prefixOverrides="and | or">
            <if test="title != null and title!=-1">
                and title=#{title}
            </if>
            <if test="city != null and city!=-1">
                and city=#{city}
            </if>
            <if test="companyName != null and companyName!='-1'">
                and companyName=#{companyName}
            </if>
            <if test="companyType != null and companyType!=-1">
                and companyType=#{companyType}
            </if>
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="website != null and website!='-1'">
                and website=#{website}
            </if>
            <if test="status != null and status!=-1">
                and status=#{status}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
        </trim>
    </delete>

    <update id="updateRecruitByCondition" parameterType="java.util.Map">
        update recruit set status=2
        <trim prefix="where" prefixOverrides="and | or">
            <if test="title != null and title!=-1">
                and title=#{title}
            </if>
            <if test="city != null and city!=-1">
                and city=#{city}
            </if>
            <if test="companyName != null and companyName!='-1'">
                and companyName=#{companyName}
            </if>
            <if test="companyType != null and companyType!=-1">
                and companyType=#{companyType}
            </if>
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="website != null and website!='-1'">
                and website=#{website}
            </if>
            <if test="status != null and status!=-1">
                and status=#{status}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
        </trim>
    </update>


    <update id="rollBackByCondition" parameterType="java.util.Map">
        update recruit set status=0
        <trim prefix="where" prefixOverrides="and | or">
            <if test="title != null and title!=-1">
                and title=#{title}
            </if>
            <if test="city != null and city!=-1">
              and city=#{city}
            </if>
            <if test="companyName != null and companyName!='-1'">
                and companyName=#{companyName}
            </if>
            <if test="companyType != null and companyType!=-1">
                and companyType=#{companyType}
            </if>
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="website != null and website!='-1'">
                and website=#{website}
            </if>
            <if test="status != null and status!=-1">
                and status=#{status}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
        </trim>
    </update>

    <select id="statisticCountByGroup" resultType="Integer"  parameterType="java.util.Map">
        SELECT  COUNT(*) FROM(
            SELECT
                ${name} as name,
                COUNT(*) AS count,
                ROUND((COUNT(*)*100)/(SELECT COUNT(*) FROM recruit
                <trim prefix="where" prefixOverrides="and | or">
                    <if test="dataType != null and dataType!=-1">
                        and dataType=#{dataType}
                    </if>
                    <if test="taskId != null and taskId!=-1">
                        and taskId=#{taskId}
                    </if>
                    and status=0 and ${name}!='' and ${name} is not NULL
                </trim>
                ),2) as percent
            FROM recruit
        <trim prefix="where" prefixOverrides="and | or">
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
            and status=0 and ${name}!='' and ${name} is not NULL
        </trim>
            GROUP BY ${name}
        ) A
    </select>


    <select id="statisticListByGroup" resultType="cn.kgc.vo.KeywordSortVo" parameterType="java.util.Map">
        SELECT
            ${name} as name,
            COUNT(${name}) AS count,
            ROUND((COUNT(${name})*100)/(SELECT COUNT(*) FROM recruit
        <trim prefix="where" prefixOverrides="and | or">
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
            and status=0 and ${name}!='' and ${name} is not NULL
        </trim>
        ),2) as percent
        FROM recruit
        <trim prefix="where" prefixOverrides="and | or">
            <if test="dataType != null and dataType!=-1">
                and dataType=#{dataType}
            </if>
            <if test="taskId != null and taskId!=-1">
                and taskId=#{taskId}
            </if>
            and status=0 and ${name}!='' and ${name} is not NULL
        </trim>
        GROUP BY ${name} ORDER BY count DESC
        <if test="beginPos != null and pageSize != null ">
            limit #{beginPos},#{pageSize}
        </if>
    </select>

</mapper>